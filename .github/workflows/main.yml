name: CI/CD

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build_and_pr:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup Prisma (Conditional Schema and DATABASE_URL)
        run: |
          # Determine Prisma schema file based on the branch
          if [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "Using PostgreSQL schema."
            # No need to copy the file, just set the DATABASE_URL if it's not already set
            if [ -z "$DATABASE_URL" ]; then
              export DATABASE_URL="${{ secrets.DATABASE_URL }}" # If you use secrets for production
            fi
          else
            SCHEMA_FILE="prisma/schema.sqlite.prisma"
            echo "Using SQLite schema."
            export DATABASE_URL="file:./dev.db" # Set DATABASE_URL for SQLite
            cp "$SCHEMA_FILE" prisma/schema.prisma # Copy SQLite schema
          fi

          yarn prisma:format
          yarn prisma:generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }} # Production DB URL
          NODE_ENV: production

      - name: Lint and Format
        run: |
          yarn lint
          yarn format:check

      - name: Test
        run: yarn test
        env:
          DATABASE_URL: 'file:./test.db'

      - name: Build
        run: yarn build
        env:
          NODE_ENV: production
          DATABASE_URL: 'file:./prod.db'
